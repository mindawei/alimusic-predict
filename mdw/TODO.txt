--------------
* 歌曲表初探 *
--------------
1 有多少首歌曲,有没有重复（song_id），有多少个艺人。艺人的歌曲数量范围（artist_id）
>> 总共10842条记录，歌曲唯一,50个艺人,每个艺人歌曲数量范围10~1861

//2 歌曲总的发行天数变化
！没啥意义好像

//3 每个艺人歌曲时间分布

4 每个艺人初始播放热度平均值（song_init_plays）
>> 1152 到 790977 之间
！ 发现：歌曲数量不多的歌手初始播放热度较高，怀疑资历越老的初始播放影响力不大

5 语言整体分布（Language）
>> {2: 3102, 4: 3029, 1: 1942, 11: 1500, 3: 775, 100: 437, 12: 28, 0: 19, 14: 10}
! 猜测是国语、英语、韩语、日语等...

6 歌曲男女比例（Gender）
>> {2: 4105, 1: 3514, 3: 3223}
! 为什么性别会有1,2,3 除了那女还有专题、或者组合 如中国好声音、凤凰传奇

------------------
* 用户行为表初探 *
------------------
1 多少条记录，有多少用户数目
>> SELECT COUNT(*) from user_actions :5652232记录
>> SELECT COUNT(DISTINCT(user_id)) FROM user_actions : 349946个用户

2 用户行为表中有多少首歌
>> SELECT COUNT(DISTINCT(song_id)) FROM user_actions :10278首

3 播放，下载，收藏的比例
>> SELECT action_type,COUNT(*) FROM user_actions GROUP BY action_type 
>>1，播放；2，下载，3，收藏 [(1, 4783603), (2, 812427), (3, 56202)]

--------------
* 基础操作   *
--------------
1 绘制每个艺人歌曲变化的曲线图
>> 输出到 'data/artists/' 目录下

2 使用GBDT进行拟合 
TODO

------------------------------
* 艺人歌曲变化的曲线图分析   *
------------------------------
1 为什么有些天数据比较大
>> 针对 2b7fedeea967becd9408b896de8ff903 
>> abnormal.py  某人听某一首歌时刻变化
 [1435334400         15]  0点
 [1435338000         16]  1点
 [1435341600         16]  2点
 [1435345200         27]  3点
 [1435348800         17]  4点
 [1435352400         12]  5点
 [1435356000         20]  6点
 [1435359600         34]  7点
 [1435363200         36]  8点
 [1435366800         32]  9点
 [1435370400         13] 10点
 [1435377600         10] 12点
 [1435381200          6] 13点
 [1435384800          6] 14点 
 [1435406400          2] 15点
 

